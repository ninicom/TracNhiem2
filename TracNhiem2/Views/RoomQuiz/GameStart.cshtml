<!-- Created By CodingNepal - www.codingnepalweb.com  -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hành trình tri thức | HQH</title>
    <style>
        /* importing google fonts */
        import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        #room-id {
            position: fixed;
            text-align:center;
            top: 80px;
            left: 20px; 
            padding: 10px;
        }

        #notificationContainer {
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 200px;
        }

        .notification {
            background-color: #4CAF50;
            color: white;
            padding: 16px;
            margin-top: 10px;
            display: none;
            transition: opacity 2s ease-in-out; /* Thêm hiệu ứng chuyển động */
        }

        ::selection {
            color: #fff;
            background: #007bff;
        }

        textarea {
            resize: none;
            border: none;
            background-color: transparent;
        }

            textarea:focus {
                outline: none;
            }

        .start_btn {
            z-index: 2;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        }

        .info_box,
        .quiz_box,
        .result_box {
            z-index: 2;
            position: absolute;
            top: 50%;
            left: 45%;
            transform: translate(-50%, -50%);
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        }

            .info_box.activeInfo,
            .quiz_box.activeQuiz,
            .result_box.activeResult {
                opacity: 1;
                z-index: 5;
                pointer-events: auto;
                transform: translate(-50%, -50%) scale(1);
            }

            .start_btn button {
                z-index: 3;
                font-size: 25px;
                font-weight: 500;
                color: #007bff;
                padding: 15px 30px;
                outline: none;
                border: none;
                border-radius: 5px;
                background: #fff;
                cursor: pointer;
            }

        .info_box {
            width: 540px;
            background: #fff;
            border-radius: 5px;
            transform: translate(-50%, -50%) scale(0.9);
            opacity: 0;
            pointer-events: none;
            transition: all 0.3s ease;
        }

            .info_box .info-title {
                height: 60px;
                width: 100%;
                border-bottom: 1px solid lightgrey;
                display: flex;
                align-items: center;
                padding: 0 30px;
                border-radius: 5px 5px 0 0;
                font-size: 20px;
                font-weight: 600;
            }

            .info_box .info-list {
                padding: 15px 30px;
            }

                .info_box .info-list .info {
                    margin: 5px 0;
                    font-size: 17px;
                }

                    .info_box .info-list .info span {
                        font-weight: 600;
                        color: #007bff;
                    }

            .info_box .buttons {
                height: 60px;
                display: flex;
                align-items: center;
                justify-content: flex-end;
                padding: 0 30px;
                border-top: 1px solid lightgrey;
            }

                .info_box .buttons button {
                    margin: 0 5px;
                    height: 40px;
                    width: 100px;
                    font-size: 16px;
                    font-weight: 500;
                    cursor: pointer;
                    border: none;
                    outline: none;
                    border-radius: 5px;
                    border: 1px solid #007bff;
                    transition: all 0.3s ease;
                }

        .quiz_box {
            width: 1000px;
            background: #fff;
            border-radius: 5px;
            transform: translate(-50%, -50%) scale(0.9);
            opacity: 0;
            pointer-events: none;
            transition: all 0.3s ease;
        }

            .quiz_box header {
                position: relative;
                z-index: 2;
                height: 70px;
                padding: 0 30px;
                background: #fff;
                border-radius: 5px 5px 0 0;
                display: flex;
                align-items: center;
                justify-content: space-between;
                box-shadow: 0px 3px 5px 1px rgba(0,0,0,0.1);
            }

                .quiz_box header .title {
                    font-size: 20px;
                    font-weight: 600;
                }

                .quiz_box header .timer {
                    color: #004085;
                    background: #cce5ff;
                    border: 1px solid #b8daff;
                    height: 45px;
                    padding: 0 8px;
                    border-radius: 5px;
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    width: 145px;
                }

                    .quiz_box header .timer .time_left_txt {
                        font-weight: 400;
                        font-size: 17px;
                        user-select: none;
                    }

                    .quiz_box header .timer .timer_sec {
                        font-size: 18px;
                        font-weight: 500;
                        height: 30px;
                        width: 45px;
                        color: #fff;
                        border-radius: 5px;
                        line-height: 30px;
                        text-align: center;
                        background: #343a40;
                        border: 1px solid #343a40;
                        user-select: none;
                    }

                .quiz_box header .time_line {
                    position: absolute;
                    bottom: 0px;
                    left: 0px;
                    height: 3px;
                    background: #007bff;
                }

        section {
            padding: 25px 30px 20px 30px;
            background: #fff;
        }

            section .que_text {
                font-size: 25px;
                font-weight: 600;
            }

            section .option_list {
                padding: 20px 0px;
                display: block;
            }

                section .option_list .option {
                    background: aliceblue;
                    border: 1px solid #84c5fe;
                    border-radius: 5px;
                    padding: 8px 15px;
                    font-size: 17px;
                    margin-bottom: 15px;
                    cursor: pointer;
                    transition: all 0.3s ease;
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                }

                    section .option_list .option:last-child {
                        margin-bottom: 0px;
                    }

                    section .option_list .option:hover {
                        color: #004085;
                        background: #cce5ff;
                        border: 1px solid #b8daff;
                    }

                    section .option_list .option.correct {
                        color: #155724;
                        background: #d4edda;
                        border: 1px solid #c3e6cb;
                    }

                    section .option_list .option.incorrect {
                        color: #721c24;
                        background: #f8d7da;
                        border: 1px solid #f5c6cb;
                    }

                    section .option_list .option.disabled {
                        pointer-events: none;
                    }

                    section .option_list .option .icon {
                        height: 26px;
                        width: 26px;
                        border: 2px solid transparent;
                        border-radius: 50%;
                        text-align: center;
                        font-size: 13px;
                        pointer-events: none;
                        transition: all 0.3s ease;
                        line-height: 24px;
                    }

        .option_list .option .icon.tick {
            color: #23903c;
            border-color: #23903c;
            background: #d4edda;
        }

        .option_list .option .icon.cross {
            color: #a42834;
            background: #f8d7da;
            border-color: #a42834;
        }

        footer {
            height: 60px;
            padding: 0 30px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-top: 1px solid lightgrey;
        }

            footer .total_que span {
                display: flex;
                user-select: none;
            }

                footer .total_que span p {
                    font-weight: 500;
                    padding: 0 5px;
                }

                    footer .total_que span p:first-child {
                        padding-left: 0px;
                    }

            footer button {
                height: 40px;
                padding: 0 13px;
                font-size: 18px;
                font-weight: 400;
                cursor: pointer;
                border: none;
                outline: none;
                color: #fff;
                border-radius: 5px;
                background: #007bff;
                border: 1px solid #007bff;
                line-height: 10px;
                opacity: 0;
                pointer-events: none;
                transform: scale(0.95);
                transition: all 0.3s ease;
            }

                footer button:hover {
                    background: #0263ca;
                }

                footer button.show {
                    opacity: 1;
                    pointer-events: auto;
                    transform: scale(1);
                }

        .result_box {
            background: #fff;
            border-radius: 5px;
            display: flex;
            padding: 25px 30px;
            width: ;
            align-items: center;
            flex-direction: column;
            justify-content: center;
            transform: translate(-50%, -50%) scale(0.9);
            opacity: 0;
            pointer-events: none;
            transition: all 0.3s ease;
        }

            .result_box .icon {
                font-size: 100px;
                color: #007bff;
                margin-bottom: 10px;
            }

            .result_box .complete_text {
                font-size: 20px;
                font-weight: 500;
            }

            .result_box .score_text span {
                display: flex;
                margin: 10px 0;
                font-size: 18px;
                font-weight: 500;
            }

                .result_box .score_text span p {
                    padding: 0 4px;
                    font-weight: 600;
                }

            .result_box .buttons {
                display: flex;
                margin: 20px 0;
            }

                .result_box .buttons button {
                    margin: 0 10px;
                    height: 45px;
                    padding: 0 20px;
                    font-size: 18px;
                    font-weight: 500;
                    cursor: pointer;
                    border: none;
                    outline: none;
                    border-radius: 5px;
                    border: 1px solid #007bff;
                    transition: all 0.3s ease;
                }

        .buttons button.restart {
            color: #fff;
            background: #007bff;
        }

            .buttons button.restart:hover {
                background: #0263ca;
            }

        .buttons button.quit {
            color: #007bff;
            background: #fff;
        }

            .buttons button.quit:hover {
                color: #fff;
                background: #007bff;
            }

        #leaderboard {
            z-index: 1;
            top: 50%;
            right: 50%;
            transform: translate(50%, -50%);
            position: fixed;
            --top: 80px;
            --right: 20px;
            background-color: darkgrey;
            color: white;
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 400px;
            min-height: 200px;
            border-radius: 10px;
            padding-top: 20px;
        }

        .row {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-between;
            width: 100%;
            padding: 5px;
        }

        .gold-medal {
            color: #FFD700;
            width: auto;
        }

        .silver-medal {
            color: #C0C0C0;
            width: auto;
        }

        .bronze-medal {
            color: #CD7F32;
            width: auto;
        }

        .medal {
            color: #000000;
            width: auto;
        }

        .name {
            color: white;
            width: auto;
        }

        .score {
            color: yellow;
            width: auto;
        }
    </style>
    
    <script src="~/js/checkPlayer.js"></script>
    <!-- FontAweome CDN Link for Icons-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
</head>
<body>
    <input type="text" id="room-id" disabled>
    <!-- start Quiz button -->
    <div class="start_btn" id="admin_btn" style="display: none"><button>Bắt đầu</button></div>
    <div id="leaderboard"></div>
    <!-- Info Box -->
    <div class="info_box">
        <div class="info-title"><span></span></div>
        <div class="info-list">
            
        </div>
        <div class="buttons">
            <button class="quit">Thoát</button>
            <button class="restart">Tiếp tục</button>
        </div>
    </div>

    <!-- Quiz Box -->
    <div class="quiz_box">
        <header>
            <div class="title">Hành trình tri thức</div>
            <div class="timer">
                <div class="time_left_txt">Hết giờ</div>
                <div class="timer_sec">5</div>
            </div>
            <div class="time_line"></div>
        </header>
        <section>
            <div class="que_text">
                <!-- Here I've inserted question from JavaScript -->
            </div>
            <div class="option_list">
                <!-- Here I've inserted options from JavaScript -->
            </div>
        </section>

        <!-- footer of Quiz Box -->
        <footer>
            <div class="total_que">
                <!-- Here I've inserted Question Count Number from JavaScript -->
            </div>
            <button class="next_btn">Câu tiếp theo</button>
        </footer>
    </div>

    <!-- Result Box -->
    <div class="result_box">
        <div class="icon">

            <i class="fas fa-crown"></i>
        </div>
        <div class="complete_text">Bạn đã hoàn thành Quiz</div>
        <div class="score_text">
            <!-- Here I've inserted Score Result from JavaScript -->
        </div>
        <div class="buttons">
            <button class="restart" id="btn_restart" style="display: none">Chơi lại</button>
            <button class="quit">Thoát</button>
        </div>
    </div>
    <div id="notificationContainer"></div>
    <!-- Inside this JavaScript file I've inserted Questions and Options only -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <!-- Inside this JavaScript file I've coded all Quiz Codes -->
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        // creating an array and passing the number, questions, options, and answers
        "use strict";

        var question;
        var groupId;
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
        var currentRoom = window.location.search.split('=')[1];
        var user = localStorage.getItem('user_name');
        var room = window.location.search.split('=')[1];
        var user_id = localStorage.getItem("user_id");
        let userScore = 0;
        let isAdminRoom = false;

        window.onload = loadListQuestion;
        function loadListQuestion() {
            //clearData();
            var room = window.location.search.split('=')[1];
            $.ajax({
                url: '../RoomQuiz/GetRoomById',
                type: 'Get',
                data: {
                    roomId: room,
                },
                success: function (result) {
                    if (result.code != 200) {
                        alert("phòng không tồn tại");
                        window.location.href = '/';
                        return;
                    }
                    $("#room-id").val("Room ID: " + room);
                    groupId = result.room.groupId;
                    $.ajax({
                        url: '/Question/GetQuestionByGroup', // Đường dẫn đến action lấy danh sách câu hỏi
                        type: 'GET',
                        dataType: 'json',
                        data: {
                            groupId: groupId,
                        },
                        success: function (data) {
                            question = data.question;
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
            
        }
        

        // nhận thông báo khi chọn replay
        connection.on("replayGame", function () {

            quiz_box.classList.add("activeQuiz"); //show quiz box
            result_box.classList.remove("activeResult"); //hide result box
            timeValue = 5;
            que_count = 0;
            que_numb = 1;
            userScore = 0;
            widthValue = 0;
            showQuetions(que_count); //calling showQestions function
            queCounter(que_numb); //passing que_numb value to queCounter
            clearInterval(counter); //clear counter
            clearInterval(counterLine); //clear counterLine
            startTimer(timeValue); //calling startTimer function
            startTimerLine(widthValue); //calling startTimerLine function
            timeText.textContent = "Hết giờ"; //change the text of timeText to Time Left
            timeCount.textContent = 5;
            next_btn.classList.remove("show"); //hide the next button
        });
        // nhận thông báo khi có người thoát ra khỏ phòng
        connection.on("NewUser", function (user) {
            showNotification(`${user} vừa vào phòng`); // Gọi hàm với thông báo cụ thể
            getplayer();
        });

        connection.on("RemoveUser", function () {
            getplayer();            
        });

        connection.on("update_sc", function () {
            getplayer();
        });

        connection.on("AdminLeave", function () {
            alert("Chủ phòng đã thoát khỏi phòng, bạn sẽ được chuyển đến trang chính!");
            window.location.href = '../';
        });

        connection.start().then(function () {
            joinRoom();
            connection.invoke("PlayerConnected", room, parseInt(user_id), user);
            currentRoom = $("#IdRoom").val();
            IsAdmin();
        }).catch(function (err) {
            return console.error(err.toString());
        });

        connection.on("StartGame", function () {
            $("#leaderboard").css({
                "top": "80px",
                "right": "20px",
                "transform": "translate( 0%, 0%)",
                "transition": "2s",
            });
            info_box.classList.remove("activeInfo"); //hide info box
            quiz_box.classList.add("activeQuiz"); //show quiz box
            showQuetions(0); //calling showQestions function
            queCounter(1); //passing 1 parameter to queCounter
            startTimer(5); //calling startTimer function
            startTimerLine(0); //calling startTimerLine function
        });
        function joinRoom() {
            // code here
            if (room == null || room == '')
                window.location.href = '../Home';
            $("#IdRoom").val(room);
            userScore = 0;            
            currentRoom = $("#IdRoom").val();
        };

        function IsAdmin() {
            $.ajax({
                url: '../RoomQuiz/IsAdminRoom',
                type: 'Get',
                data: {
                    roomId: room,
                    playerId: user_id,
                },
                success: function (result) {
                    if (result.isAdmin) {
                        isAdminRoom = true; 
                        $("#admin_btn").css('display', 'block');
                        $("#btn_restart").css('display', 'block');
                        $("#leaderboard").css({
                            "top": "80px",
                            "right": "20px",
                            "transform": "translate( 0%, 0%)",
                            "transition": "2s",
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        

        function getplayer() {
            $.ajax({
                url: '../RoomQuizView/getPlayerFromRoom',
                type: 'GET',
                data: { roomId: room },
                success: function (result) {
                    loadLeaderBoard(result.players);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        function UpdateScorePlayerToRoom(score) {
            $.ajax({
                url: '../RoomQuizView/updateScore',
                type: 'post',
                data: {
                    roomId: room,
                    playerId: user_id,
                    score: userScore,
                },
                success: function (result) {
                    connection.invoke("UpdateScore", room);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }


        function showNotification(message) { // Thêm tham số message
            var container = document.getElementById('notificationContainer');

            var notification = document.createElement('div');
            notification.className = 'notification';
            notification.textContent = message; // Sử dụng tham số message
            container.appendChild(notification); // Thêm thông báo mới vào cuối container

            notification.style.display = 'block';

            setTimeout(function () {
                notification.style.opacity = '1';
            }, 1000);

            // Xóa thông báo cũ nếu có quá 3 thông báo
            while (container.children.length > 3) {
                container.removeChild(container.lastChild);
            }

            // Tự động xóa thông báo sau 5 giây
            setTimeout(function () {
                if (notification.parentNode === container) {
                    container.removeChild(notification);
                }
            }, 5000);
        }





        function loadLeaderBoard(players) {
            clearLeaderboard();
            $.each(players, function (key, value) {
                AddPlayerToLeaderBoard(value.id, value.name, value.score, key);
            });
        }
        function clearLeaderboard() {
            var leaderboard = document.querySelector("#leaderboard");
            leaderboard.innerHTML = "";
        }

        function AddPlayerToLeaderBoard(id, name, score, index) {
            // Tạo phần tử HTML mới
            var div = document.createElement("div");
            div.id = id;
            div.className = "row";

            // Thêm nội dung cho phần tử HTML mới
            var medal = createMedal(index);

            var namePlayer = document.createElement("div");
            namePlayer.className = "name";
            namePlayer.innerHTML = name;

            var scorePlayer = document.createElement("div");
            scorePlayer.className = "score";
            scorePlayer.innerHTML = score;

            div.appendChild(medal);
            div.appendChild(namePlayer);
            div.appendChild(scorePlayer);

            // Thêm phần tử mới vào phần tử HTML đã cho
            var leaderboard = document.querySelector("#leaderboard");
            leaderboard.appendChild(div);
        }

        function createMedal(index) {
            var medal = document.createElement("div");
            switch (index) {
                case 0:
                    medal.className = "gold-medal";
                    medal.innerHTML = "🥇";
                    break;
                case 1:
                    medal.className = "silver-medal";
                    medal.innerHTML = "🥈";
                    break;
                case 2:
                    medal.className = "bronze-medal";
                    medal.innerHTML = "🥉";
                    break;
                default:
                    medal.className = "medal";
                    medal.innerHTML = "🏅";
            }
            return medal;
        }



















        //selecting all required elements
        const start_btn = document.querySelector(".start_btn button");
        const info_box = document.querySelector(".info_box");
        const exit_btn = info_box.querySelector(".buttons .quit");
        const continue_btn = info_box.querySelector(".buttons .restart");
        const quiz_box = document.querySelector(".quiz_box");
        const result_box = document.querySelector(".result_box");
        const option_list = document.querySelector(".option_list");
        const time_line = document.querySelector("header .time_line");
        const timeText = document.querySelector(".timer .time_left_txt");
        const timeCount = document.querySelector(".timer .timer_sec");

        // if startQuiz button clicked
        start_btn.onclick = () => {
            $("#leaderboard").css({
                "top": "80px",
                "right": "20px",
                "transform": "translate( 0%, 0%)",
                "transition": "2s",
            });
            connection.invoke("GameStart", room);
            info_box.classList.add("activeInfo"); //show info box
            
        }

        // if exitQuiz button clicked
        exit_btn.onclick = () => {
            info_box.classList.remove("activeInfo"); //hide info box
        }

        // if continueQuiz button clicked
        continue_btn.onclick = () => {
            
            info_box.classList.remove("activeInfo"); //hide info box
            quiz_box.classList.add("activeQuiz"); //show quiz box
            showQuetions(0); //calling showQestions function
            queCounter(1); //passing 1 parameter to queCounter
            startTimer(5); //calling startTimer function
            startTimerLine(0); //calling startTimerLine function
        }
        let i = 0;
        let timeValue = 5;
        let que_count = 0;
        let que_numb = 1;
        let counter;
        let counterLine;
        let widthValue = 0;

        const restart_quiz = result_box.querySelector(".buttons .restart");
        const quit_quiz = result_box.querySelector(".buttons .quit");

        // if restartQuiz button clicked
        restart_quiz.onclick = () => {

            connection.invoke("ReplayQuiz", room).catch(function (err) {
                return console.error(err.toString());
            });

            var curenRoom = parseInt(room);

            $.ajax({
                url: '../RoomQuizView/ResetScore',
                type: 'post',
                data: {
                    roomId: curenRoom,
                },
                success: function (result) {
                    getplayer();
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });

            quiz_box.classList.add("activeQuiz"); //show quiz box
            result_box.classList.remove("activeResult"); //hide result box
            timeValue = 5;
            que_count = 0;
            que_numb = 1;
            userScore = 0;
            widthValue = 0;
            showQuetions(que_count); //calling showQestions function
            queCounter(que_numb); //passing que_numb value to queCounter
            clearInterval(counter); //clear counter
            clearInterval(counterLine); //clear counterLine
            startTimer(timeValue); //calling startTimer function
            startTimerLine(widthValue); //calling startTimerLine function
            timeText.textContent = "Hết giờ"; //change the text of timeText to Time Left
            next_btn.classList.remove("show"); //hide the next button
        }

        // if quitQuiz button clicked
        quit_quiz.onclick = () => {//reload the current window
            window.location.href = '/Game';
        }

        const next_btn = document.querySelector("footer .next_btn");
        const bottom_ques_counter = document.querySelector("footer .total_que");

        // if Next Que button clicked
        function next_question(){
            if (que_count < question.length - 1) { //if question count is less than total question length
                timeCount.textContent = 5; //changing the value of timeCount with time value
                que_count++; //increment the que_count value
                que_numb++; //increment the que_numb value
                showQuetions(que_count); //calling showQestions function
                queCounter(que_numb); //passing que_numb value to queCounter
                clearInterval(counter); //clear counter
                clearInterval(counterLine); //clear counterLine
                startTimer(timeValue); //calling startTimer function
                startTimerLine(widthValue); //calling startTimerLine function
                timeText.textContent = "Hết giờ"; //change the timeText to Time Left
                next_btn.classList.remove("show"); //hide the next button
            } else {
                clearInterval(counter); //clear counter
                clearInterval(counterLine); //clear counterLine
                showResult(); //calling showResult function
            }
        }
        next_btn.onclick = () => {
            next_question();
        }


        // getting questions and options from array
        function showQuetions(index) {
            const que_text = document.querySelector(".que_text");

            //creating a new span and div tag for question and option and passing the value using array index
            let que_tag = '<textarea readonly name="textarea" style="width: 100%">' + question[index].content + '</textarea>';
            let option_tag = '<div class="option" value="A"><textarea readonly name="textarea" style="width: 100%">' + question[index].answer1 + '</textarea></div>'
                + '<div class="option" value="B"><textarea readonly name="textarea" style="width: 100%">' + question[index].answer2 + '</textarea></div>'
                + '<div class="option" value="C"><textarea readonly name="textarea" style="width: 100%">' + question[index].answer3 + '</textarea></div>'
                + '<div class="option" value="D"><textarea readonly name="textarea" style="width: 100%">' + question[index].answer4 + '</textarea></div>';
            que_text.innerHTML = que_tag; //adding new span tag inside que_tag
            option_list.innerHTML = option_tag; //adding new div tag inside option_tag

            const option = option_list.querySelectorAll(".option");

            autosize(document.querySelectorAll('textarea'));

            // set onclick attribute to all available options
            for (i = 0; i < option.length; i++) {
                option[i].setAttribute("onclick", "optionSelected(this)");
            }
        }
        // creating the new div tags which for icons
        let tickIconTag = '<div class="icon tick"><i class="fas fa-check"></i></div>';
        let crossIconTag = '<div class="icon cross"><i class="fas fa-times"></i></div>';
        let isanswer = false;
        //if user clicked on option
        function optionSelected(answer) {
            //clearInterval(counter); //clear counter
           // clearInterval(counterLine); //clear counterLine
            let userAns = answer.getAttribute("value"); //getting user selected option
            let correcAns = question[que_count].correctAnswer; //getting correct answer from array
            const allOptions = option_list.children.length; //getting all option items
            isanswer = true;
            if (userAns == correcAns) { //if user selected option is equal to array's correct answer
                userScore += 10; //upgrading score value with 1                
                UpdateScorePlayerToRoom(userScore);
                event.preventDefault();
                answer.classList.add("correct"); //adding green color to correct selected option
                answer.insertAdjacentHTML("beforeend", tickIconTag); //adding tick icon to correct selected option
                //console.log("Correct Answer");
                //console.log("Your correct answers = " + userScore);
            } else {
                answer.classList.add("incorrect"); //adding red color to correct selected option
                answer.insertAdjacentHTML("beforeend", crossIconTag); //adding cross icon to correct selected option
                //console.log("Wrong Answer");

                for (i = 0; i < allOptions; i++) {
                    if (option_list.children[i].getAttribute("value") == correcAns) { //if there is an option which is matched to an array answer
                        option_list.children[i].setAttribute("class", "option correct"); //adding green color to matched option
                        option_list.children[i].insertAdjacentHTML("beforeend", tickIconTag); //adding tick icon to matched option
                        //console.log("Auto selected correct answer.");
                    }
                }
            }
            for (i = 0; i < allOptions; i++) {
                option_list.children[i].classList.add("disabled"); //once user select an option then disabled all options
            }
            //next_btn.classList.add("show"); //show the next button if user selected any option
        }

        function showResult() {
            info_box.classList.remove("activeInfo"); //hide info box
            quiz_box.classList.remove("activeQuiz"); //hide quiz box
            result_box.classList.add("activeResult"); //show result box
            const scoreText = result_box.querySelector(".score_text");
            
            let scoreTag = '<span>Bạn đã đặt được <p>' + userScore/10 + '</p> trong số <p>' + question.length + '</p> câu hỏi</span>';
            scoreText.innerHTML = scoreTag;  //adding new span tag inside score_Text
            
        }

        function startTimer(time) {
            counter = setInterval(timer, 1000);
            function timer() {
                time--; //decrement the time value
                timeCount.textContent = time; //changing the value of timeCount with time value
                
                if (time < 0 && !isanswer) { //if timer is less than 0
                    clearInterval(counter); //clear counter
                    timeText.textContent = "Câu kế"; //change the time text to time off
                    timeCount.textContent = 5;
                    const allOptions = option_list.children.length; //getting all option items
                    let correcAns = question[que_count].correctAnswer; //getting correct answer from array
                    for (i = 0; i < allOptions; i++) {
                        if (option_list.children[i].getAttribute("value") == correcAns) { //if there is an option which is matched to an array answer
                            option_list.children[i].setAttribute("class", "option correct"); //adding green color to matched option
                            option_list.children[i].insertAdjacentHTML("beforeend", tickIconTag); //adding tick icon to matched option
                            //console.log("Time Off: Auto selected correct answer.");
                        }
                    }
                    for (i = 0; i < allOptions; i++) {
                        option_list.children[i].classList.add("disabled"); //once user select an option then disabled all options
                    }
                }
                if (time < 0) {
                    timeText.textContent = "Câu kế"; //change the time text to time off
                    timeCount.textContent = 5;
                    clearInterval(counter); //clear counter
                    //timeText.textContent = "Time Off"; //change the time text to time off
                    timer_next();
                }
                 //next_btn.classList.add("show"); //show the next button if user selected any option
            }
        }
        
        function startTimerLine(time) {
            counterLine = setInterval(timer, 6);
            function timer() {
                time += 1; //upgrading time value with 1
                time_line.style.width = time + "px"; //increasing width of time_line with px by time value
                if (time > 1000) { //if time value is greater than 549
                    clearInterval(counterLine); //clear counterLine
                }
            }
        }

        function queCounter(index) {
            //creating a new span tag and passing the question number and total question
            let totalQueCounTag = '<span><p>' + index + '</p> of <p>' + question.length + '</p> Questions</span>';
            bottom_ques_counter.innerHTML = totalQueCounTag;  //adding new span tag inside bottom_ques_counter
        }

        function timer_next() {
            var time_nextQ = 4;
            counter = setInterval(timer, 1000);
            function timer() {
                timeCount.textContent = time_nextQ; //changing the value of timeCount with time value
                time_nextQ--; //decrement the time value
            };

            setTimeout(() => {
                next_question();
                clearInterval(counterNext);
            }, 6000); // Chờ 3 giây
        }
    </script>

</body>
</html>